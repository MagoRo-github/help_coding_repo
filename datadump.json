[{"model": "homepage.homepage", "pk": 1, "fields": {"code": "HTML", "slug": "html", "code_guide": "", "code_img": "static/img/code_img/html5-gb6df4826b_1920_YNWwRfu.png", "code_description": ""}}, {"model": "homepage.homepage", "pk": 2, "fields": {"code": "CSS", "slug": "css", "code_guide": "", "code_img": "static/img/code_img/logo-g38ddf2c58_1920_u9uE4BG.png", "code_description": ""}}, {"model": "homepage.homepage", "pk": 3, "fields": {"code": "Javascript", "slug": "javascript", "code_guide": "", "code_img": "static/img/code_img/javascript-g98a83c7bf_1280_Ju2fKpu.png", "code_description": ""}}, {"model": "homepage.homepage", "pk": 5, "fields": {"code": "Python", "slug": "python", "code_guide": "", "code_img": "static/img/code_img/Python-logo-notext.svg_uBivhZt.png", "code_description": ""}}, {"model": "homepage.homepage", "pk": 6, "fields": {"code": "PHP", "slug": "php", "code_guide": "", "code_img": "static/img/code_img/php-gac2a59960_1280.png", "code_description": "PHP PHP PHP PHP PHP PHP PHP PHP PHP"}}, {"model": "homepage.homepage", "pk": 7, "fields": {"code": "Django", "slug": "django", "code_guide": "", "code_img": "static/img/code_img/django-logo.png", "code_description": "django django django django django"}}, {"model": "coding.coding", "pk": 3, "fields": {"linguaggio": "CSS", "slug": "css", "argomento": "background", "slug_argomento": "background", "snippet": "background-size:cover;\r\nbackground-position:center ;\r\n\r\nbackground: url(xxxxxx) no-repeat center center;\r\n\r\nbackground-size: cover / content / 500px / 50% / à;"}}, {"model": "coding.coding", "pk": 8, "fields": {"linguaggio": "CSS", "slug": "css", "argomento": "flex", "slug_argomento": "display-flex", "snippet": ".contenitore{\r\n    ...\r\ná á display: flex;\r\n    flex-direction: row; (column;) /* flex-direction: row Þ il default. Si pu‗ usare row-reverse e column-reverse che invertono lÆordine dei flex item */\r\n\r\n    flex-wrap: wrap; /* wrap trasforma il layout da row a columns se la pagina si restringe (funziona secondo i parametri di larghezza impostati per i flexitem o del suo contenuto). \r\n    Si pu‗ usare anche wrap-reverse o nowrap. */\r\n}\r\n\r\n.box{\r\ná á flex: 0 0 600px;  \r\n    /* flex-grow: 0; */ prenderÓ una porzione dello spazio lasciato vuoto dai blocchi che hanno lunghezza minima fissa (pu‗ essere < 1)\r\ná á /* flex-shrink: 0; */ definire se e di quanto deve restringersi il flexitem. (valore 0 non si restringerÓ mai ); con 2 il flexitem si restringerÓ il doppio degli altri che sono 1\r\ná á /* flex-basis: 600px;*/ definire la larghezza di partenza del flexitem \r\n    ...\r\n    order: 1; /*dare un ordinamento diverso ai blocchi cambiando le posizioni che altrimenti seguirebbero lÆordine di scrittura in HTML (funziona solo tra i blocchi dove Þ presente)*/\r\n\r\n    align-self: center; /* il flexitem non ha una height e quindi si prenderÓ tutta lÆaltezza disponibile nel flex container. Con align-self il flexitem prende la dimensione del suo contenuto\r\n     e si posiziona al centro (center) del flexcontainer in senso orizzontale */ . si pu‗ usare flex-start e flex-end\r\n\r\n    justify-content: center; /* allineamento orizzontale*/\r\n    justify-content: space-between; /* allineamento ai margini con spazio al centro */\r\n \r\n}"}}, {"model": "coding.coding", "pk": 9, "fields": {"linguaggio": "CSS", "slug": "css", "argomento": "Media query", "slug_argomento": "media-query", "snippet": "/* TABLET */\r\n@media (max-widt:998px) { // Funziona per schermi di dimensione di un TABLET (max 998 px)\r\ná á à // si aggiungono le classi / id / tag da modificare (solo le proprietÓ che cambiano)\r\n}\r\n/* SMARTPHONE */\r\n@media (max-width:767px) { // Funziona per schermi di dimensione di un SMARTPHONE (max 767 px)\r\ná á à\r\n}"}}, {"model": "coding.coding", "pk": 10, "fields": {"linguaggio": "CSS", "slug": "css", "argomento": "transition", "slug_argomento": "transition", "snippet": "Transition: transition - CSS: https://developer.mozilla.org/en-US/docs/Web/CSS/transition\r\n\r\ntransition: <property> <duration> <timing-function> <delay>;\r\n\r\ntransition: all 0.5s ease-out 0.5s;"}}, {"model": "coding.coding", "pk": 11, "fields": {"linguaggio": "CSS", "slug": "css", "argomento": "type", "slug_argomento": "type", "snippet": "#form>input[type=\"submit\"]{\r\ná á ...\r\n}"}}, {"model": "coding.coding", "pk": 12, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "Creazione nuovo progetto", "slug_argomento": "creazione-nuovo-prog", "snippet": "CREARE PRIMA AMBIENTE VIRTUALE\r\n\r\npip install django\r\ndjango-admin startproject nome-progetto (si genera una nuova cartella chiamata <nome-progetto>)\r\n\r\ncd nome-progetto\r\npython manage.py runserver (posizionandosi all'interno della cartella <nome progetto>)"}}, {"model": "coding.coding", "pk": 13, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "Creare un app", "slug_argomento": "creare-un-app", "snippet": "cd nome-progetto\r\npython manage.py startapp nome-app"}}, {"model": "coding.coding", "pk": 14, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "Function views", "slug_argomento": "function-views", "snippet": "from django.shortcuts import render\r\n# importiamo dal file models la classe <modello>\r\nfrom .models import modello\r\n\r\n# request Þ una struttura dati che contiene info sul contesto, la richiesta, ecc\r\ndef index(request):\r\ná á # creiamo una lista con tutti gli oggetti presenti nel modello importato\r\ná á obj_ls = modello.objects.all()\r\ná á #creiamo un dict vuoto\r\ná á context = {}\r\ná á # popoliamo il dict con i valori che sarebbero le proprietÓ create nel model (che viene importato)\r\ná á # in questo caso prendiamo il primo oggetto\r\ná á context['message'] = obj_ls[0].attributo \r\n\r\ná á # il primo parametro Þ la struttura di dati\r\ná á # il secondo parametro Þ il percorso del template da utilizzare\r\ná á # il terzo parametro (dict) (opzionale) serve a passare informazioni da visualizzare al template\r\ná á return render(request, 'modello/index.html', context=context)"}}, {"model": "coding.coding", "pk": 15, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "Class-based views", "slug_argomento": "class-based-views", "snippet": "# importiamo dal file models <modello>\r\nfrom .models import modello\r\n\r\n# importiamo la classe padre TemplateView\r\nfrom django.views.generic.base import TemplateView\r\n\r\n# metodo CBV\r\nclass ModelloView (TemplateView):\r\ná á # proprietÓ presente nella classe padre da sovrascrivere\r\ná á # individua il templare da caricare\r\ná á template_name = 'modello/index.html'\r\n\r\ná á # metodo da estendere\r\ná á def get_context_data(self, **kwargs):\r\ná á á á # quello che torniamo Þ il context del padre esteso dalla classe ModelloView\r\ná á á á context = super().get_context_data(**kwargs)\r\ná á á á context['message'] = Modello.objects.all()[0].message\r\ná á á á return context"}}, {"model": "coding.coding", "pk": 16, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "urls.py (app)", "slug_argomento": "urlspy-app", "snippet": "\"\"\"mydjango URL Configuration\r\n\r\nThe `urlpatterns` list routes URLs to views. For more information please see:\r\ná á https://docs.djangoproject.com/en/4.1/topics/http/urls/\r\nExamples:\r\nFunction views\r\ná á 1. Add an import: áfrom my_app import views\r\ná á 2. Add a URL to urlpatterns: ápath('', views.home, name='home')\r\nClass-based views\r\ná á 1. Add an import: áfrom other_app.views import Home\r\ná á 2. Add a URL to urlpatterns: ápath('', Home.as_view(), name='home')\r\nIncluding another URLconf\r\ná á 1. Import the include() function: from django.urls import include, path\r\ná á 2. Add a URL to urlpatterns: ápath('blog/', include('blog.urls'))\r\n\"\"\"\r\nfrom django.urls import path\r\nfrom . import views\r\n\r\napp_name = 'nome-app' # >>>>>>>>>>>>>> inserire\r\n\r\nurlpatterns = [\r\ná á path('<path>', views.vista, name='landingpage'), # >>>> Function views\r\n    path('<path>', views.Vista.as_view(), name='landingpage'), # >>>>> Class-based views\r\n]"}}, {"model": "coding.coding", "pk": 17, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "urls.py (progetto)", "slug_argomento": "urlspy-progetto", "snippet": "from django.contrib import admin\r\nfrom django.urls import path, include\r\n\r\nurlpatterns = [\r\ná á path('admin/', admin.site.urls),\r\ná á path('<path>/', include('nome-app.urls')),\r\n]\r\n\r\n# questo Þ una comando di sicurezza e abilita l'utilizzo \r\n# dei file statici solo se siamo in fase di sviluppo (DEBUG = True)\r\nif settings.DEBUG:\r\n    urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)   # >>>>> per l'utilizzo dei file static"}}, {"model": "coding.coding", "pk": 18, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "models.py", "slug_argomento": "modelspy", "snippet": "from django.db import models\r\n\r\n# Create your models here.\r\nclass Modello(models.Model):\r\ná á # in questa classe si definiscono proprietÓ e metodi dell'app\r\ná á # per esempio definiamo una proprietÓ della app che Þ message \r\ná á # assegnando un tipo predefinito della classe padre Charfield\r\ná á message = models.CharField(max_length=250)\r\n\r\n    class Meta:    # >>>>> Þ una sottoclasse del modello\r\n        ordering = ('-attributo',)\r\n        verbose_name_plural = \"nome_attributo_plurale\"   # >>>>>> dove previsto l'uso del plurale inserisce il nome definito\r\n \r\n    def __str__(self):\r\n        return self.attributo + <stringa>\r\n    \r\n    def get_absolute_url(self):\r\n        return reverse(\"app_name:url-name\", args=[self.slug,])"}}, {"model": "coding.coding", "pk": 19, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "setting.py (inizializzazione)", "slug_argomento": "settingpy-inizializ", "snippet": "...\r\n\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'nome-app.apps.SetConfig', #>>>>> registrate le nuove app\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n]\r\n...\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [Path(BASE_DIR, 'templates')],    # >>>>>>> inserire percorso per la cartella templates\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n           ....\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\n...\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/4.1/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'it'  # >>>>> cambiare la lingua\r\n\r\nTIME_ZONE = 'UTC' # >>>>> cambiare la time zone se necessario\r\n\r\n...\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\r\n\r\nSTATIC_URL = 'static/'\r\n# STATIC_ROOT = [Path(BASE_DIR, 'static/')]\r\nSTATICFILES_DIRS = [      # >>>>>>>> aggiungere\r\n  BASE_DIR / \"static\"       # >>>>>>>> aggiungere\r\n  ]                                    # >>>>>>>> aggiungere\r\n\r\n..."}}, {"model": "coding.coding", "pk": 20, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "Migrazioni", "slug_argomento": "migazioni", "snippet": "python manage.py makemigrations     # >>>>>>>>> includere tutte le app presenti nel progetto \r\n\r\npython manage.py migrate                  #  >>>>>>>>> esegue le migrazioni\r\n\r\n----------------------------------------\r\n\r\npython manage.py sqlmigrate set 0001  # >>>>>>>>> Il comando sqlmigrate accetta i nomi delle migrazioni e restituisce il loro SQL\r\n\r\npython manage.py check         # >>>>>>>>>  verifica eventuali problemi nel progetto senza effettuare migrazioni o toccare il database."}}, {"model": "coding.coding", "pk": 21, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "admin.py", "slug_argomento": "adminpy", "snippet": "python manage.py createsuperuser  # >>>>> creare un superuser  \r\n\r\nfrom django.contrib import admin\r\n# importiamo il modulo da registrare\r\nfrom .models import Modello\r\n\r\n#registriamo la classe presente nel models.py\r\nadmin.site.register(Modello)"}}, {"model": "coding.coding", "pk": 22, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "ModelAdmin", "slug_argomento": "modeladmin", "snippet": "from django.contrib import admin\r\n\r\nfrom .models import Modello\r\n\r\n# admin.site.register(Modello)\r\n\r\n@admin.register(Modello)\r\nclass ModelloAdmin(admin.ModelAdmin):\r\ná á # la proprietÓ per il completamento automatico dello slug\r\ná á # vuole un dict con la chiave che rappresenta il nome del field\r\ná á # come valore una tupla che avrÓ un solo valore e sarÓ il field di riferimento per il completamento\r\ná á prepopulated_fields = {'slug' : ('attributo1',)}\r\n\r\ná á # una lista di attributi da visualizzare nella pagina admin\r\ná á list_display = ('attributo1', 'attributo2', 'attributo3')\r\n\r\ná á # inserire dei filtri\r\ná á list_filter = ('attributo1', 'attributo2')\r\n\r\ná á # ricerca\r\ná á search_fields = ('attributo1', 'attributo2Æ)\r\n\r\n    # ordinamento\r\n    ordering = ('attributo1', 'attributo2Æ)"}}, {"model": "coding.coding", "pk": 23, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "get_absolute_url", "slug_argomento": "get_absolute_url", "snippet": "...\r\nfrom django.urls import reverse\r\n\r\n# Create your models here.\r\nclass Article(models.Model):\r\ná á \r\n    slug = models.SlugField(max_length=50)\r\ná á ...\r\n\r\ná á def get_absolute_url(self):\r\ná á á á # ritorna l'indirizzo dell'oggetto da visualizzare\r\ná á á á # il primo parametro Þ l'app_name presente nell'urls.py della app e il name assegnato al path\r\ná á á á # il secondo parametro Þ la proprietÓ che vogliamo inserire nell'indirizzo (vogliamo far comparire il contenuto attraverso lo slug)\r\ná á á á return reverse('app_name:path_name', args=[self.slug,])\r\n\r\n# ----- Utilizzo nel TEMPLATE ------\r\n...\r\n<a href=\"{{ <context_attribute>.get_absolute_url }}\" class=\"\"> TESTO </a>\r\n.."}}, {"model": "coding.coding", "pk": 24, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "choiches", "slug_argomento": "choiches", "snippet": "...\r\n# Create your models here.\r\nclass Modello(models.Model):\r\n    TECONOLOGIA = 'TC'\r\ná á SPORT = 'SP'\r\ná á SALUTE = 'SL'\r\ná á TEMPO_LIBERO = 'TL'\r\n\r\ná á CATEGORIES = [\r\ná á á á (TECONOLOGIA, 'TECONOLOGIA'),\r\ná á á á (SPORT, 'SPORT'),\r\ná á á á (SALUTE, 'SALUTE'),\r\ná á á á (TEMPO_LIBERO, 'TEMPO LIBERO')\r\ná á ]\r\n\r\ná á category = models.CharField(max_length=2, choices=CATEGORIES, default='TLÆ á)\r\nà\r\n\r\n# -------------- TEMPLATES -----------------------\r\n<p class=\"\">{{ <context_attribute>.get_category_display }}</p>\r\n\r\n# -------------- ALTERNATIVA ---------------------\r\n...\r\n# Create your models here.\r\nclass Modello(models.Model):\r\n    class Categories (models.TextChoises):\r\n        TECONOLOGIA = 'TC', _(\"Tecnologia\")\r\ná á     SPORT = 'SP', _(\"Sport\")\r\ná á     SALUTE = 'SL', _(\"Salute\")\r\ná á     TEMPO_LIBERO = 'TL', _(\"Tempo Libero\")\r\n\r\ná á category = models.CharField(max_length=2, choices=Categories.choices, default=Categories.TEMPO_LIBERO á)"}}, {"model": "coding.coding", "pk": 25, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "ImageField", "slug_argomento": "imagefield", "snippet": "# ---------------- models.py -------------------\r\nà\r\nfoto_set = models.ImageField(upload_to=\"static/foto\", blank=True) # >>>>>>> ImageField\r\nà\r\n\r\n# ---------------- Template ---------------------\r\n<img src=\"{{ set_<context_attribute>.foto_set.url }}\" alt=\"<context_attribute>.nome\">"}}, {"model": "coding.coding", "pk": 26, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "static", "slug_argomento": "static", "snippet": "# ------------------- setting.py ---------------------------\r\n# definiamo un percorso per arrivare alla cartella static\r\n# BASE_DIR Þ la variabile globale (definita all'inizio del file settings.py) dove si trova la root del progetto\r\nSTATIC_URL = 'static/'\r\n\r\nSTATICFILES_DIRS = [\r\ná á BASE_DIR / \"static\",\r\ná á # BASE_DIR / \"vetrina\" / \"static\",\r\n]\r\n\r\n# ------------- urls.py (progetto) ---------------\r\nfrom django.contrib import admin\r\nfrom django.urls import path, include\r\n\r\n# importiamo il file settings\r\nfrom django.conf import settings\r\n# importare il metodo static\r\nfrom django.conf.urls.static import static\r\n\r\n\u000burlpatterns = [\r\ná á path('admin/', admin.site.urls),\r\ná á ....\r\n]\r\n\r\n# questo Þ una comando di sicurezza e abilita l'utilizzo \r\n# dei file statici solo se siamo in fase di sviluppo (DEBUG = True)\r\nif settings.DEBUG:\r\ná á urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)\r\n\r\n# ------------------- Template -----------------------\r\n...\r\n{% load static %}\r\n...\r\n<!-- CCS custom -->\r\n<link href=\"{% static \"/css/blog.css\" %}\" rel=\"stylesheet\">\r\n...\r\n<!-- favicon -->\r\n<link rel=\"shortcut icon\" type=\"image/png\" href=\"{% static 'img\\logo\\help-coding-logo.ico' %}\"/>\r\n...\r\n<!-- immagini-->\r\n<img style=\"\" src=\"{% static \"\\img\\Immagine_non_disponibile.jpg\" %}\" alt=\"\">"}}, {"model": "coding.coding", "pk": 27, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "Template block", "slug_argomento": "template-block", "snippet": "{% block <nome template>%}\r\n    {% include \"<path del template>\" %}   # >>>>>> in genere <nome-app>/partials/<nome-template>.html\r\n{% endblock <nome template>%}"}}, {"model": "coding.coding", "pk": 28, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "Models Fields", "slug_argomento": "models-fields", "snippet": "from django.db import models\r\nfrom django.conf import settings  # >>>>> serve per importare settings.AUTH_USER_MODEL\r\nfrom django.utils import timezone  # >>>>> per gestire le date\r\n\r\nclass Article(models.Model):\r\ná á \r\ná á title = models.CharField(max_length=250)\r\ná á # la proprietÓ slug Þ gestita con una metodo della superclasse\r\n\r\ná á slug = models.SlugField(max_length=50)\r\ná á # possiamo specificare diversi parametri dimensionali ma quello importante Þ il percorso\r\ná á # settando blank = True rendo non obbligatorio l'inserimento di una immagine\r\ná á img = models.ImageField(upload_to='uploads', blank=True) á# da un errore e chiede pip install Pillow\r\n\r\ná á # Þ il contenuto dell'articolo\r\ná á body = models.TextField()\r\ná á \r\ná á # potrebbe essere un utente uso il modello di default esistente\r\ná á # che fa scegliere tra diverse possibilitÓ\r\ná á # il primo parametro Þ il modello a cui puntiamo (importare settings)\r\ná á # on_delete Þ obbligatorio e si pu‗ usare CASCADE come suggerito dalla documentazione\r\ná á # serve in caso di cancellazione di informazioni\r\ná á author = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\r\n\r\ná á # data di creazione articolo (solo la prima volta)\r\ná á # usando default si inserirÓ una data creata secondo le nostre esigenza\r\ná á # con Timezone serve importare il modulo\r\ná á # inizia con un campo preimpostato ma Þ editabile\r\ná á created = models.DateTimeField(default=timezone.now)\r\n\r\ná á published = models.DateTimeField(default=timezone.now)\r\ná á # voglio aggiornare la data ad ogni salvataggio usando auto_now\r\ná á update á= models.DateTimeField(auto_now=True)"}}, {"model": "coding.coding", "pk": 29, "fields": {"linguaggio": "Django", "slug": "django", "argomento": "get_queryset", "slug_argomento": "get_queryset", "snippet": "# ------------------ Vista ------------------------\r\nclass VISTA(ListView):\r\n    ...\r\n\r\n    def get_queryset(self):\r\n        queryset = self.request.GET.get('q')\r\n        if queryset:\r\n            return Coding.objects.filter(Q(<attributo>=queryset))\r\n            # filtria per il valore di attributo = queryset\r\n        else:\r\n            return\r\n\r\n# ----------- Form da templates --------------------------\r\n{% for codice in codici %}\r\n      <form action=\"{% url 'coding:coding' codice.code%}\" method=\"GET\">\r\n      <input style=\"display:none;\" value=\"{{codice.code}}\" name=\"q\">   # >>>>>>> input nascosto e inviato in caso di pressione del button\r\n      \r\n        <div class=\"col\">\r\n            <button type=\"submit\" class=\" \" style=\"\">\r\n              <div class=\"\">\r\n                <h3 class=\"\"> {{codice.code}} </h3>\r\n              </div>\r\n            </button>\r\n        </div>\r\n      \r\n    </form>\r\n      {% endfor %}"}}, {"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2023-04-26T19:02:24.805Z", "user": 1, "content_type": 1, "object_id": "1", "object_repr": "HTML", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2023-04-26T19:02:41.262Z", "user": 1, "content_type": 1, "object_id": "2", "object_repr": "CSS", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2023-04-26T20:00:25.233Z", "user": 1, "content_type": 1, "object_id": "3", "object_repr": "Javascript", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2023-04-26T20:11:00.169Z", "user": 1, "content_type": 1, "object_id": "4", "object_repr": "css", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2023-04-26T20:11:23.391Z", "user": 1, "content_type": 1, "object_id": "4", "object_repr": "css", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2023-04-26T20:11:54.980Z", "user": 1, "content_type": 2, "object_id": "1", "object_repr": "test 1 (HTML)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2023-04-26T20:12:24.976Z", "user": 1, "content_type": 2, "object_id": "2", "object_repr": "test_2 (HTML)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2023-04-26T20:12:48.595Z", "user": 1, "content_type": 2, "object_id": "3", "object_repr": "background (CSS)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2023-04-26T21:00:05.755Z", "user": 1, "content_type": 1, "object_id": "5", "object_repr": "Python", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2023-04-27T20:21:41.589Z", "user": 1, "content_type": 2, "object_id": "1", "object_repr": "test1 (HTML)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Argomento\"]}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2023-04-27T20:27:27.302Z", "user": 1, "content_type": 2, "object_id": "1", "object_repr": "test1 (HTML)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Slug argomento\"]}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2023-04-27T20:27:31.787Z", "user": 1, "content_type": 2, "object_id": "3", "object_repr": "background (CSS)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Slug argomento\"]}}]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2023-04-27T20:27:41.820Z", "user": 1, "content_type": 2, "object_id": "2", "object_repr": "test 2 (HTML)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Argomento\", \"Slug argomento\"]}}]"}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2023-04-27T20:28:09.130Z", "user": 1, "content_type": 2, "object_id": "1", "object_repr": "test uno di uno (HTML)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Argomento\", \"Slug argomento\"]}}]"}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2023-04-27T20:28:12.155Z", "user": 1, "content_type": 2, "object_id": "1", "object_repr": "test uno di uno (HTML)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Slug argomento\"]}}]"}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2023-04-27T20:32:26.594Z", "user": 1, "content_type": 2, "object_id": "3", "object_repr": "background (CSS)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2023-04-27T20:39:12.104Z", "user": 1, "content_type": 2, "object_id": "3", "object_repr": "background (CSS)", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2023-04-27T20:40:06.489Z", "user": 1, "content_type": 2, "object_id": "1", "object_repr": "test uno di uno (HTML)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2023-04-27T20:40:19.246Z", "user": 1, "content_type": 2, "object_id": "3", "object_repr": "background (CSS)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 20, "fields": {"action_time": "2023-04-27T20:47:27.026Z", "user": 1, "content_type": 2, "object_id": "3", "object_repr": "background (CSS)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 21, "fields": {"action_time": "2023-04-27T20:47:55.071Z", "user": 1, "content_type": 2, "object_id": "3", "object_repr": "background (CSS)", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 22, "fields": {"action_time": "2023-04-27T20:48:31.889Z", "user": 1, "content_type": 2, "object_id": "3", "object_repr": "background (CSS)", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 23, "fields": {"action_time": "2023-04-27T20:48:43.203Z", "user": 1, "content_type": 2, "object_id": "3", "object_repr": "background (CSS)", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 24, "fields": {"action_time": "2023-04-27T20:50:38.515Z", "user": 1, "content_type": 2, "object_id": "4", "object_repr": "testo 1111 (HTML)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 25, "fields": {"action_time": "2023-04-27T20:53:20.818Z", "user": 1, "content_type": 2, "object_id": "5", "object_repr": "Test 2 (HTML)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 26, "fields": {"action_time": "2023-04-27T20:53:48.973Z", "user": 1, "content_type": 2, "object_id": "6", "object_repr": "test 21 (CSS)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 27, "fields": {"action_time": "2023-04-27T20:56:46.888Z", "user": 1, "content_type": 1, "object_id": "6", "object_repr": "PHP", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 28, "fields": {"action_time": "2023-04-27T21:17:03.573Z", "user": 1, "content_type": 2, "object_id": "7", "object_repr": "j1 1 (Javascript)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 29, "fields": {"action_time": "2023-04-29T19:20:20.510Z", "user": 1, "content_type": 1, "object_id": "7", "object_repr": "Django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 30, "fields": {"action_time": "2023-04-29T21:04:11.816Z", "user": 1, "content_type": 2, "object_id": "5", "object_repr": "Test 2 (HTML)", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 31, "fields": {"action_time": "2023-04-29T21:04:11.820Z", "user": 1, "content_type": 2, "object_id": "4", "object_repr": "testo 1111 (HTML)", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 32, "fields": {"action_time": "2023-04-29T21:04:11.824Z", "user": 1, "content_type": 2, "object_id": "2", "object_repr": "test 2 (HTML)", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 33, "fields": {"action_time": "2023-04-29T21:04:11.827Z", "user": 1, "content_type": 2, "object_id": "1", "object_repr": "test uno di uno (HTML)", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 34, "fields": {"action_time": "2023-04-29T21:04:20.774Z", "user": 1, "content_type": 2, "object_id": "6", "object_repr": "test 21 (CSS)", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 35, "fields": {"action_time": "2023-04-29T21:12:25.720Z", "user": 1, "content_type": 2, "object_id": "7", "object_repr": "j1 1 (Javascript)", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 36, "fields": {"action_time": "2023-04-29T21:19:08.920Z", "user": 1, "content_type": 2, "object_id": "8", "object_repr": "display: flex (CSS)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 37, "fields": {"action_time": "2023-04-29T21:23:25.176Z", "user": 1, "content_type": 2, "object_id": "8", "object_repr": "display: flex (CSS)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 38, "fields": {"action_time": "2023-04-29T21:24:02.040Z", "user": 1, "content_type": 2, "object_id": "8", "object_repr": "display: flex (CSS)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 39, "fields": {"action_time": "2023-04-29T21:25:24.430Z", "user": 1, "content_type": 2, "object_id": "8", "object_repr": "display: flex (CSS)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 40, "fields": {"action_time": "2023-04-29T21:27:37.983Z", "user": 1, "content_type": 2, "object_id": "8", "object_repr": "display: flex (CSS)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 41, "fields": {"action_time": "2023-04-29T21:28:27.557Z", "user": 1, "content_type": 2, "object_id": "8", "object_repr": "display: flex (CSS)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 42, "fields": {"action_time": "2023-04-29T21:31:16.970Z", "user": 1, "content_type": 2, "object_id": "8", "object_repr": "display: flex (CSS)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 43, "fields": {"action_time": "2023-04-29T21:33:49.441Z", "user": 1, "content_type": 2, "object_id": "9", "object_repr": "Media query (CSS)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 44, "fields": {"action_time": "2023-04-29T21:35:43.918Z", "user": 1, "content_type": 2, "object_id": "10", "object_repr": "transition (CSS)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 45, "fields": {"action_time": "2023-04-29T21:37:10.057Z", "user": 1, "content_type": 2, "object_id": "11", "object_repr": "type (CSS)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 46, "fields": {"action_time": "2023-04-29T21:38:17.584Z", "user": 1, "content_type": 1, "object_id": "8", "object_repr": "TEST", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 47, "fields": {"action_time": "2023-04-29T21:38:39.080Z", "user": 1, "content_type": 1, "object_id": "8", "object_repr": "TEST", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 48, "fields": {"action_time": "2023-04-30T15:21:01.508Z", "user": 1, "content_type": 2, "object_id": "8", "object_repr": "flex (CSS)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Argomento\"]}}]"}}, {"model": "admin.logentry", "pk": 49, "fields": {"action_time": "2023-04-30T16:29:15.740Z", "user": 1, "content_type": 2, "object_id": "12", "object_repr": "Creazione nuovo progetto (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 50, "fields": {"action_time": "2023-04-30T16:30:31.347Z", "user": 1, "content_type": 2, "object_id": "12", "object_repr": "Creazione nuovo progetto (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 51, "fields": {"action_time": "2023-04-30T16:48:02.961Z", "user": 1, "content_type": 2, "object_id": "12", "object_repr": "Creazione nuovo progetto (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 52, "fields": {"action_time": "2023-04-30T16:48:49.489Z", "user": 1, "content_type": 2, "object_id": "13", "object_repr": "Creare un app (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 53, "fields": {"action_time": "2023-04-30T17:07:18.451Z", "user": 1, "content_type": 2, "object_id": "14", "object_repr": "Function views (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 54, "fields": {"action_time": "2023-04-30T17:08:06.358Z", "user": 1, "content_type": 2, "object_id": "15", "object_repr": "Class-based views (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 55, "fields": {"action_time": "2023-04-30T17:10:43.498Z", "user": 1, "content_type": 2, "object_id": "14", "object_repr": "Function views (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 56, "fields": {"action_time": "2023-04-30T17:13:42.104Z", "user": 1, "content_type": 2, "object_id": "15", "object_repr": "Class-based views (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 57, "fields": {"action_time": "2023-04-30T17:18:15.064Z", "user": 1, "content_type": 2, "object_id": "16", "object_repr": "urls.py (app) (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 58, "fields": {"action_time": "2023-04-30T17:20:02.899Z", "user": 1, "content_type": 2, "object_id": "17", "object_repr": "urls.py (progetto) (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 59, "fields": {"action_time": "2023-04-30T21:43:46.902Z", "user": 1, "content_type": 2, "object_id": "18", "object_repr": "models.py (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 60, "fields": {"action_time": "2023-05-01T11:19:11.966Z", "user": 1, "content_type": 2, "object_id": "19", "object_repr": "setting.py (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 61, "fields": {"action_time": "2023-05-01T11:21:38.648Z", "user": 1, "content_type": 2, "object_id": "19", "object_repr": "setting.py (inizializzazione) (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Argomento\", \"Slug argomento\"]}}]"}}, {"model": "admin.logentry", "pk": 62, "fields": {"action_time": "2023-05-01T11:34:05.419Z", "user": 1, "content_type": 2, "object_id": "18", "object_repr": "models.py (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 63, "fields": {"action_time": "2023-05-01T16:50:25.104Z", "user": 1, "content_type": 2, "object_id": "17", "object_repr": "urls.py (progetto) (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 64, "fields": {"action_time": "2023-05-01T16:58:29.654Z", "user": 1, "content_type": 2, "object_id": "20", "object_repr": "Migazioni (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 65, "fields": {"action_time": "2023-05-01T17:00:02.402Z", "user": 1, "content_type": 2, "object_id": "20", "object_repr": "Migazioni (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 66, "fields": {"action_time": "2023-05-01T17:00:26.210Z", "user": 1, "content_type": 2, "object_id": "20", "object_repr": "Migazioni (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 67, "fields": {"action_time": "2023-05-01T17:00:40.705Z", "user": 1, "content_type": 2, "object_id": "20", "object_repr": "Migazioni (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 68, "fields": {"action_time": "2023-05-01T17:01:00.458Z", "user": 1, "content_type": 2, "object_id": "20", "object_repr": "Migazioni (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 69, "fields": {"action_time": "2023-05-01T17:03:42.290Z", "user": 1, "content_type": 2, "object_id": "21", "object_repr": "admin.py (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 70, "fields": {"action_time": "2023-05-01T17:07:11.143Z", "user": 1, "content_type": 2, "object_id": "22", "object_repr": "ModelAdmin (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 71, "fields": {"action_time": "2023-05-01T17:20:46.994Z", "user": 1, "content_type": 2, "object_id": "16", "object_repr": "urls.py (app) (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 72, "fields": {"action_time": "2023-05-01T17:21:34.623Z", "user": 1, "content_type": 2, "object_id": "18", "object_repr": "models.py (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 73, "fields": {"action_time": "2023-05-01T17:40:36.300Z", "user": 1, "content_type": 2, "object_id": "23", "object_repr": "get_absolute_url (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 74, "fields": {"action_time": "2023-05-01T17:49:18.065Z", "user": 1, "content_type": 2, "object_id": "23", "object_repr": "get_absolute_url (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 75, "fields": {"action_time": "2023-05-01T17:49:56.902Z", "user": 1, "content_type": 2, "object_id": "23", "object_repr": "get_absolute_url (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 76, "fields": {"action_time": "2023-05-01T19:58:51.764Z", "user": 1, "content_type": 2, "object_id": "24", "object_repr": "choiches (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 77, "fields": {"action_time": "2023-05-01T20:05:12.269Z", "user": 1, "content_type": 2, "object_id": "24", "object_repr": "choiches (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 78, "fields": {"action_time": "2023-05-01T20:08:23.564Z", "user": 1, "content_type": 2, "object_id": "24", "object_repr": "choiches (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 79, "fields": {"action_time": "2023-05-02T16:34:42.287Z", "user": 1, "content_type": 2, "object_id": "25", "object_repr": "ImageField (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 80, "fields": {"action_time": "2023-05-02T17:04:50.156Z", "user": 1, "content_type": 2, "object_id": "20", "object_repr": "Migrazioni (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Argomento\"]}}]"}}, {"model": "admin.logentry", "pk": 81, "fields": {"action_time": "2023-05-02T17:09:46.845Z", "user": 1, "content_type": 2, "object_id": "26", "object_repr": "static (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 82, "fields": {"action_time": "2023-05-02T17:18:38.660Z", "user": 1, "content_type": 2, "object_id": "26", "object_repr": "static (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 83, "fields": {"action_time": "2023-05-02T17:18:51.620Z", "user": 1, "content_type": 2, "object_id": "26", "object_repr": "static (Django)", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 84, "fields": {"action_time": "2023-05-02T17:28:50.487Z", "user": 1, "content_type": 2, "object_id": "27", "object_repr": "Template block (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 85, "fields": {"action_time": "2023-05-02T18:23:25.041Z", "user": 1, "content_type": 2, "object_id": "28", "object_repr": "Models Fields (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 86, "fields": {"action_time": "2023-05-02T20:19:15.042Z", "user": 1, "content_type": 2, "object_id": "29", "object_repr": "get_queryset (Django)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 87, "fields": {"action_time": "2023-05-02T20:46:11.084Z", "user": 1, "content_type": 2, "object_id": "18", "object_repr": "models.py (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "admin.logentry", "pk": 88, "fields": {"action_time": "2023-05-02T20:47:09.424Z", "user": 1, "content_type": 2, "object_id": "18", "object_repr": "models.py (Django)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Snippet\"]}}]"}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add homepage", "content_type": 1, "codename": "add_homepage"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change homepage", "content_type": 1, "codename": "change_homepage"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete homepage", "content_type": 1, "codename": "delete_homepage"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view homepage", "content_type": 1, "codename": "view_homepage"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add coding", "content_type": 2, "codename": "add_coding"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change coding", "content_type": 2, "codename": "change_coding"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete coding", "content_type": 2, "codename": "delete_coding"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view coding", "content_type": 2, "codename": "view_coding"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add log entry", "content_type": 3, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change log entry", "content_type": 3, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete log entry", "content_type": 3, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view log entry", "content_type": 3, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add permission", "content_type": 4, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change permission", "content_type": 4, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete permission", "content_type": 4, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view permission", "content_type": 4, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add group", "content_type": 5, "codename": "add_group"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change group", "content_type": 5, "codename": "change_group"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete group", "content_type": 5, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view group", "content_type": 5, "codename": "view_group"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add user", "content_type": 6, "codename": "add_user"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change user", "content_type": 6, "codename": "change_user"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete user", "content_type": 6, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view user", "content_type": 6, "codename": "view_user"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add content type", "content_type": 7, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change content type", "content_type": 7, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete content type", "content_type": 7, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view content type", "content_type": 7, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add session", "content_type": 8, "codename": "add_session"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change session", "content_type": 8, "codename": "change_session"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete session", "content_type": 8, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view session", "content_type": 8, "codename": "view_session"}}, {"model": "auth.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$600000$MuN2UDYqoo8PKAog4DLCWL$eG+czNGnLodhkBJVTh5uBAeVEljAq26Jwr49LNCFye4=", "last_login": "2023-05-07T16:34:36.551Z", "is_superuser": true, "username": "rober", "first_name": "", "last_name": "", "email": "", "is_staff": true, "is_active": true, "date_joined": "2023-04-26T19:01:54.984Z", "groups": [], "user_permissions": []}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "homepage", "model": "homepage"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "coding", "model": "coding"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "auth", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "sessions.session", "pk": "0sbrlwinvi6hxhwu909l5unuhko7hpnb", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hChoQMu3XsGMswMUjWQlHbVeHdt0oVu_3vvbyriupS4dpnjxOqijDr9bgnpKXUH_MB6b5paXeYp6V3RB-361lhe18P9OyjYy7cmOwqDJIBM5xQELQuAcZC8d3YIgcwIYm0ImTzz4ISZnMkWcfA5GfX-AP7XOKw:1psokZ:ObfhQiYGu1i7hL7stg4EIaPIPMWGzq1ZyJoH8KUIZy4", "expire_date": "2023-05-13T17:52:47.089Z"}}, {"model": "sessions.session", "pk": "0ts4ywnnr0nawinpptmpr46rl9u3ecoc", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hChoQMu3XsGMswMUjWQlHbVeHdt0oVu_3vvbyriupS4dpnjxOqijDr9bgnpKXUH_MB6b5paXeYp6V3RB-361lhe18P9OyjYy7cmOwqDJIBM5xQELQuAcZC8d3YIgcwIYm0ImTzz4ISZnMkWcfA5GfX-AP7XOKw:1pt8Ng:YfmgS5NXcmy-ma_3RC3uKbjwYUqirOGIODPwx72JyzY", "expire_date": "2023-05-14T14:50:28.944Z"}}, {"model": "sessions.session", "pk": "2ti5fe7jzpzkfa85leux0edhjzbxwnbi", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hChoQMu3XsGMswMUjWQlHbVeHdt0oVu_3vvbyriupS4dpnjxOqijDr9bgnpKXUH_MB6b5paXeYp6V3RB-361lhe18P9OyjYy7cmOwqDJIBM5xQELQuAcZC8d3YIgcwIYm0ImTzz4ISZnMkWcfA5GfX-AP7XOKw:1pvhLI:uSr0VtKk0HjBU1Ow6Av17_XmWdlHYFqfufwYXrReanU", "expire_date": "2023-05-21T16:34:36.556Z"}}, {"model": "sessions.session", "pk": "3d1nvw0mmhpa0xa1c0f5z4gpz2i7nwfw", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hChoQMu3XsGMswMUjWQlHbVeHdt0oVu_3vvbyriupS4dpnjxOqijDr9bgnpKXUH_MB6b5paXeYp6V3RB-361lhe18P9OyjYy7cmOwqDJIBM5xQELQuAcZC8d3YIgcwIYm0ImTzz4ISZnMkWcfA5GfX-AP7XOKw:1psRxI:j75LiZjQhbHHLkyHtrDTXfidMz0HOJ8Wg856zMGAsPA", "expire_date": "2023-05-12T17:32:24.125Z"}}, {"model": "sessions.session", "pk": "9nfvjq4a5f3ljvb8u9266g0m22z1yxbg", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hChoQMu3XsGMswMUjWQlHbVeHdt0oVu_3vvbyriupS4dpnjxOqijDr9bgnpKXUH_MB6b5paXeYp6V3RB-361lhe18P9OyjYy7cmOwqDJIBM5xQELQuAcZC8d3YIgcwIYm0ImTzz4ISZnMkWcfA5GfX-AP7XOKw:1puJ1x:WOMT1PDGWgeaDxNfS36xThj2v7YKl6RgfIVPepi1t5Q", "expire_date": "2023-05-17T20:24:53.534Z"}}, {"model": "sessions.session", "pk": "ets7bz9ekehdgq6d8lxhexvqlj80kqml", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hChoQMu3XsGMswMUjWQlHbVeHdt0oVu_3vvbyriupS4dpnjxOqijDr9bgnpKXUH_MB6b5paXeYp6V3RB-361lhe18P9OyjYy7cmOwqDJIBM5xQELQuAcZC8d3YIgcwIYm0ImTzz4ISZnMkWcfA5GfX-AP7XOKw:1ptstp:CFVR3-jAqY5NRQTrZsU6Qr5o0y0EY62tpYBGvvtjSOQ", "expire_date": "2023-05-16T16:30:45.180Z"}}, {"model": "sessions.session", "pk": "m1dvvz5lc4gm6bc7xln0hqhxvc1nwk7n", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hChoQMu3XsGMswMUjWQlHbVeHdt0oVu_3vvbyriupS4dpnjxOqijDr9bgnpKXUH_MB6b5paXeYp6V3RB-361lhe18P9OyjYy7cmOwqDJIBM5xQELQuAcZC8d3YIgcwIYm0ImTzz4ISZnMkWcfA5GfX-AP7XOKw:1prkOu:mRQkUYqo1fY2Dq16zKTc7zJXLGaTWda8TCYtl8kiUT8", "expire_date": "2023-05-10T19:02:00.182Z"}}, {"model": "sessions.session", "pk": "wn1bp31j46whm7pq701l08m7vphdv0df", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hChoQMu3XsGMswMUjWQlHbVeHdt0oVu_3vvbyriupS4dpnjxOqijDr9bgnpKXUH_MB6b5paXeYp6V3RB-361lhe18P9OyjYy7cmOwqDJIBM5xQELQuAcZC8d3YIgcwIYm0ImTzz4ISZnMkWcfA5GfX-AP7XOKw:1ps6OM:Zd9wd6oXXC8u7VRt96yQb6k3xLynQofBQ3Jh3aTVeCo", "expire_date": "2023-05-11T18:30:54.482Z"}}, {"model": "sessions.session", "pk": "zd2de38bghvvrmezgx2p5m20mvckrp5c", "fields": {"session_data": ".eJxVjEEOwiAQRe_C2hChoQMu3XsGMswMUjWQlHbVeHdt0oVu_3vvbyriupS4dpnjxOqijDr9bgnpKXUH_MB6b5paXeYp6V3RB-361lhe18P9OyjYy7cmOwqDJIBM5xQELQuAcZC8d3YIgcwIYm0ImTzz4ISZnMkWcfA5GfX-AP7XOKw:1ptQp6:I4gY7RWbA6kpbhljQ5E3RwlfCLzoGUdQbwmPqkRr6cM", "expire_date": "2023-05-15T10:32:00.541Z"}}]
